from agno.agent import Agent
from agno.models.anthropic import Claude
from agno.storage.sqlite import SqliteStorage
from agno.tools.duckduckgo import DuckDuckGoTools
from rich.pretty import pprint
from agno.models.openai import OpenAIChat
import os

os.environ["OPENAI_API_KEY"] = "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"
os.environ["OPENAI_API_BASE"] = "https://openrouter.ai/api/v1"

agent = Agent(
    # This session_id is usually auto-generated
    # But for this example, we can set it to a fixed value
    # This session will now forever continue as a very long chat
    session_id="agent_session_which_is_autogenerated_if_not_set",
    model=OpenAIChat(
        id="openai/gpt-4o-mini",
        api_key=os.environ["OPENAI_API_KEY"],  # 显式传递 API Key
        base_url=os.environ["OPENAI_API_BASE"],  # 显式指定 base_url
        default_headers={"Authorization": f"Bearer {os.environ['OPENAI_API_KEY']}"},  # 添加 Authorization 请求头
    ),
    storage=SqliteStorage(table_name="agent_sessions", db_file="tmp/agents.db"),
    tools=[DuckDuckGoTools()],
    add_history_to_messages=True,
    num_history_runs=3,
    add_datetime_to_instructions=True,
    markdown=True,
)

if __name__ == "__main__":
    print(f"Session id: {agent.session_id}")
    agent.print_response("How many people live in Canada?")
    agent.print_response("What is their national anthem?")
    agent.print_response("List my messages one by one")

    # Print all messages in this session
    messages_in_session = agent.get_messages_for_session()
    pprint(messages_in_session)